<%- include('./partials/header') %> 
<%- include('./partials/navbar') %> 

<div class="compose-log-div">
    <%- include('./partials/error') %> 
    <%- include('./partials/success') %> 
    <div class="event-compose-container">
        <h2 class="event-compose-title"><%=event.name%></h2>
        
        <div class="swiper mySwiper">
            <!-- Additional required wrapper -->
            <div class="swiper-wrapper">
              <!-- Slides -->
              <div class="swiper-slide"><img src="<%=event.image[0]%>"  class="event-compose-image"></div>
              <div class="swiper-slide"><img src="<%=event.image[1]%>"  class="event-compose-image"></div>
              <div class="swiper-slide"><img src="<%=event.image[2]%>"  class="event-compose-image"></div>
    
            </div>
            <!-- If we need navigation buttons -->
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
            <div class="swiper-pagination"></div>
          </div>

        <p>Description: <%=event.description%></p>

    </div>

    <div class="text-compose-container">

        <form action="/jump/<%=galaxy.name%>/logs/<%=event.name%>" method="POST">

            <!-- Title needs to be made required -->
            <label for="title">Log title</label>
            <input type="text" id="title" name="title" placeholder="Name your log entry" 
            value="<%=draft ? draft.title : ''%>">

            <!-- Log input needs to be made required -->
            <label for="body">Log entry</label>
            <textarea name="body" id="body" cols="25" rows="15" placeholder="Write the entry. Click on the question mark in the top right for writing tips."
            autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"  
            ><%=draft ? draft.body : ''%></textarea>

            <p class="total-character-text">Total number of characters:&nbsp;<span id="total-character-number">0</span></p> 

            <div class="text-compose-button-container">
                <button type="submit" class="save-draft-button" formaction="/jump/<%=galaxy.name%>/logs/<%=event.name%>?_method=PUT" formmethod="POST">Save log draft</button>
                <button type='submit' class="text-compose-button">Submit log</button>
            </div>
            
        </form>

        <div class="text-compose-synonyms-search-div">
            <form class="synonyms-search-form">
            <label>
                <span>Need a synonym?</span>
                <input type="text" name="synonym" class="text-compose-form-input"/>
            </label>
            
            </form>
            <p class="synonyms-display-paragraph"> </p>
            <small title="More words will be added in the future">Thesaurus is still under development - apologies for the inconvenience.</small>
        </div>

    </div>
</div>

<script>
    var swiper = new Swiper('.mySwiper', {
    
    loop: true,

    pagination: {
          el: ".swiper-pagination",
          clickable: true,
        },
    // Navigation arrows
    navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
}})

    let synonymsForm = document.querySelector('.synonyms-search-form')
    let synonymsDisplay = document.querySelector('.synonyms-display-paragraph')
    let formInput = document.querySelector('.text-compose-form-input')
    
    let word 

    synonymsForm.addEventListener('submit', (e) => {
        e.preventDefault()
        word = formInput.value
        synonymsForm.reset()
        getSynonyms()
    })

    let url = 'https://api.dictionaryapi.dev/api/v2/entries/en/'
    let synonymsArray = []

    const getSynonyms = async() => {
        try {
        synonymsArray = []
        const res = await fetch(url + word)
        const data = await res.json()

        data[0].meanings.forEach(meaning => {
                if (meaning.synonyms.length > 0) {
                    meaning.synonyms.forEach(synonym => {
                        synonymsArray.push(synonym)
                    })
                }
            })
        synonymsDisplay.innerText = synonymsArray
    } catch (err) {
        console.log(err.message)
    }
} 

const titleInput = document.querySelector('#title')
const submitButton = document.querySelector('.text-compose-button')

// // Display number of characters in the body.
let bodyInput = document.querySelector('#body')
let characterCount = document.querySelector('#total-character-number')
characterCount.textContent = bodyInput.textContent.length

// Disable submit button if input too long // refactor this to also include too long a title // title would need a different class because then then title can disable the body and vice-versa!
// function determineIfBodyInputTooLong() {
//     if (characterCount.textContent > 50) {
//     submitButton.setAttribute("disabled", "")
//     submitButton.innerText = "Log too long"
//     submitButton.classList.remove('text-compose-button')
//     submitButton.classList.add('text-compose-error-button')
// }
// }

// bodyInput.addEventListener('input', (e) => {
//     characterCount.textContent = e.target.value.length
//     if (e.target.value.length > 50) {
//         submitButton.setAttribute("disabled", "")
//         submitButton.innerText = "Log too long"
//         submitButton.classList.remove('text-compose-button')
//         submitButton.classList.add('text-compose-error-button')
//     } else {
//         submitButton.setAttribute("enabled", "")
//         submitButton.innerText = "Submit log"
//         submitButton.classList.remove('text-compose-error-button')
//         submitButton.classList.add('text-compose-button')
//     }
// })

determineIfBodyInputTooLong()

</script>

<%- include('./partials/footer') %> 